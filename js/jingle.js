'use strict';

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _jsDenodeifyJs = require('../js/denodeify.js');

var _jsDenodeifyJs2 = _interopRequireDefault(_jsDenodeifyJs);

var _ipc = require('ipc');

var _ipc2 = _interopRequireDefault(_ipc);

var _remote = require('remote');

var _remote2 = _interopRequireDefault(_remote);

var _events = require('events');

var fs = _remote2['default'].require('fs');
var readFile = (0, _jsDenodeifyJs2['default'])(fs.readFile);

_ipc2['default'].on('playVideo', function (path) {
	d3.select('body').append('video').attr({ src: path, width: '100%', height: '100%', autoplay: 'autoplay', autobuffer: 'autobuffer' }).on('ended', function () {
		d3.select(this).remove();
		_ipc2['default'].send('playVideoEnd', path);
	});
});

function toArrayBuffer(buffer) {
	var ab = new ArrayBuffer(buffer.length);
	var view = new Uint8Array(ab);
	for (var i = 0; i < buffer.length; ++i) {
		view[i] = buffer[i];
	}
	return ab;
}
_ipc2['default'].on('play', function (path) {
	playContents(path);
});

var audioCtx;
var lylics = ['Ha hahaha...', 'おかしい ハッハッハッハ', 'Snake is here.', 'Music music music music show!', 'Oh, the hottest thing of the world!', 'Of the world... Oh!', 'Yellow Magic Orchestra!!', 'Music... Music... Y M O', 'YMO ready to lay on you!', 'Nice age.'];

var svg; //d3.select('body').append('svg').attr({'width':'1024px','height':'768px'});

window.onload = function () {
	// 初期化完了
	audioCtx = new AudioContext();
};

var Track = (function (_EventEmitter) {
	_inherits(Track, _EventEmitter);

	function Track(array) {
		_classCallCheck(this, Track);

		_get(Object.getPrototypeOf(Track.prototype), 'constructor', this).call(this);
		this.seqData = array;
		this.seqCounter = 0;
	}

	_createClass(Track, [{
		key: 'sequence',
		value: function sequence(currentTime) {
			var len = this.seqData.length;
			while (len > this.seqCounter) {
				var seq = this.seqData[this.seqCounter];
				if (seq[0] <= currentTime) {
					seq[1](currentTime);
					++this.seqCounter;
				} else {
					return;
				}
				if (len <= this.seqCounter) {
					this.emit('end');
				}
			}
		}
	}]);

	return Track;
})(_events.EventEmitter);

;

var Tracks = (function (_EventEmitter2) {
	_inherits(Tracks, _EventEmitter2);

	function Tracks() {
		_classCallCheck(this, Tracks);

		_get(Object.getPrototypeOf(Tracks.prototype), 'constructor', this).call(this);
		this.tracks = [];
		this.endTrackCount = 0;
		this.end = false;
	}

	_createClass(Tracks, [{
		key: 'addTrack',
		value: function addTrack(array) {
			var _this = this;

			var track = new Track(array);
			this.tracks.push(track);
			track.on('end', function () {
				++_this.endTrackCount;
				if (_this.endTrackCount == _this.tracks.length) {
					_this.emit('end');
					_this.end = true;
				}
			});
		}
	}, {
		key: 'sequence',
		value: function sequence(currentTime) {
			this.tracks.forEach(function (track) {
				track.sequence(currentTime);
			});
		}
	}]);

	return Tracks;
})(_events.EventEmitter);

var tracks = new Tracks();

var seqData = [
// seqtime anim
[1.025, hihat], [1.422, hihat], [1.819, hihat], [2.216, hihat], [2.613, hihat], [3.01, hihat], [3.407, hihat], [3.804, hihat], [4.201, hihat], [4.598, hihat], [4.995, hihat], [5.392, hihat], [5.789, hihat], [6.186, hihat], [6.583, hihat], [6.98, hihat], [7.377, hihat], [7.774, hihat], [8.171, hihat], [8.568, hihat], [8.965, hihat], [9.362, hihat], [9.759, hihat], [10.156, hihat], [10.553, hihat], [10.95, hihat], [11.347, hihat], [11.744, hihat], [12.141, hihat], [12.538, hihat], [12.935, hihat], [13.332, hihat], [13.729, hihat], [14.126, hihat], [14.523, hihat], [14.92, hihat], [15.317, hihat], [15.714, hihat]];

tracks.addTrack(seqData);
tracks.addTrack([[2.541, bass], [2.6, bass], [2.939, bass], [3.580, bass], [4.194, bass], [4.538, bass], [4.791, bass], [5.120, bass], [5.373, bass], [5.712, bass], [5.997, bass], [6.309, bass], [6.573, bass], [6.579, bass], [9.373, bass], [9.503, bass], [9.892, bass], [11.350, bass], [11.650, bass], [12.478, bass], [12.941, bass], [13.270, bass], [14.055, bass], [14.467, bass], [14.527, bass], [15.095, bass], [15.663, bass]]);

tracks.addTrack([[4.198, text(10, 150, 'Music', 'red', '160px', 'sagoe')], [4.838, text(500, 200, 'Music', 'red', '140px')], [5.394, text(200, 250, 'Music', 'red', '130px')], [5.980, text(600, 300, 'Music', 'red', '120px')], [6.775, text(200, 500, 'Show!', 'red', '240px')], [11.343, text(200, 400, 'Music', 'red', '240px')], [12.941, text(200, 600, 'Music', 'red', '240px')], [14.518, text(250, 550, 'Y', 'red', '580px')], [15.117, text(250, 550, 'M', 'red', '580px')], [15.713, text(250, 550, 'O', 'red', '580px')]]);

var fontCache;

function text(x, y, mes, color, size, font) {
	return function () {
		fontCache = font || fontCache || '';
		svg.append('text').attr({ x: x, y: y, fill: color, opacity: 1.0 }).style({ 'font-size': size, 'font-family': fontCache }).text(mes).transition().duration(1000).attr({ opacity: 0.0 }).remove();
	};
}

function bass() {
	var x = 512,
	    y = 384;
	var g = svg.append('g');

	g.attr({ transform: 'translate(' + x + ' ' + y + ')' }).transition().delay(500).remove();

	var colors = ['white', 'red', 'blue', 'green', 'magenta', 'yellow'];
	var color = colors[Math.random() * 6 | 0];
	g.append('ellipse').attr({
		rx: 680, ry: 680,
		cx: 0, cy: 0,
		'stroke-width': 0,
		fill: color,
		opacity: 0.5
	}).transition().duration(250).attr({ opacity: 0.0, rx: 0, ry: 0 });
}

function hihat() {
	var g = svg.append('g');
	var x = Math.random() * (1024 - 400);
	var y = Math.random() * (768 - 100) + 50;
	var r = 40;
	var colors = ['white', 'red', 'blue', 'green', 'magenta', 'yellow'];
	var color = colors[Math.random() * 6 | 0];
	g.attr('transform', 'translate(' + x + ' ' + y + ')');
	g.append('ellipse').attr({
		rx: r, ry: r,
		cx: 0, cy: 0,
		'stroke-width': 0,
		fill: color,
		opacity: 0.6
	}).transition().duration(200).attr({ cx: 150, rx: r * 2.5 });

	g.append('ellipse').attr({
		rx: r, ry: r,
		cx: 300, cy: 0,
		'stroke-width': 0,
		fill: color,
		opacity: 0.0
	}).transition().delay(200).attr('opacity', 0.6);

	g.append('ellipse').attr({
		rx: r, ry: r,
		cx: 400, cy: 0,
		'stroke-width': 0,
		fill: color,
		opacity: 0.0
	}).transition().delay(332).attr('opacity', 0.6);

	var x = Math.random() * 1024;
	var y = Math.random() * 768;

	g.attr({ opacity: 0.5 }).transition().delay(367).duration(2500).attr({ 'opacity': 0.0, transform: 'translate(' + x + ' ' + y + ') scale(0)' }).remove();

	// .transition()
	// .duration(5)

	// .attr('opacity',0.0);
}

function playContents(path) {
	console.log(path);
	readFile(path).then(function (data) {
		return new Promise(function (resolve, reject) {
			var ab = toArrayBuffer(data);
			console.log(ab.byteLength);
			audioCtx.decodeAudioData(ab, function (buffer) {
				resolve(buffer);
			}, function (err) {
				reject(new Error('decodeAudioData():error:'));
			});
		});
	}).then(function (buffer) {
		return new Promise(function (resolve, reject) {
			var source = audioCtx.createBufferSource();
			var end = false;
			source.buffer = buffer;
			source.connect(audioCtx.destination);
			source.onended = function () {
				console.log('end');
				end = true;
				resolve();
			};
			// アニメーションのスタート
			svg = d3.select('body').append('svg').attr({ 'width': '1024px', 'height': '768px' });
			source.start(0);
			var startTime = audioCtx.currentTime - 0.1;
			function animate() {
				var currentTime = audioCtx.currentTime - startTime;
				tracks.sequence(currentTime);
				if (!end) {
					requestAnimationFrame(animate);
				}
			}
			animate();
		});
	}).then(function () {})['catch'](function (err) {
		console.log(err);
	});
}
//# sourceMappingURL=data:application/json;base64,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O0FBRWQsQ0FBQyxLQUFLLEVBQUMsS0FBSyxDQUFDLEVBQ2IsQ0FBQyxLQUFLLEVBQUMsS0FBSyxDQUFDLEVBQ2IsQ0FBQyxLQUFLLEVBQUMsS0FBSyxDQUFDLEVBQ2IsQ0FBQyxLQUFLLEVBQUMsS0FBSyxDQUFDLEVBQ2IsQ0FBQyxLQUFLLEVBQUMsS0FBSyxDQUFDLEVBQ2IsQ0FBQyxJQUFJLEVBQUMsS0FBSyxDQUFDLEVBQ1osQ0FBQyxLQUFLLEVBQUMsS0FBSyxDQUFDLEVBQ2IsQ0FBQyxLQUFLLEVBQUMsS0FBSyxDQUFDLEVBQ2IsQ0FBQyxLQUFLLEVBQUMsS0FBSyxDQUFDLEVBQ2IsQ0FBQyxLQUFLLEVBQUMsS0FBSyxDQUFDLEVBQ2IsQ0FBQyxLQUFLLEVBQUMsS0FBSyxDQUFDLEVBQ2IsQ0FBQyxLQUFLLEVBQUMsS0FBSyxDQUFDLEVBQ2IsQ0FBQyxLQUFLLEVBQUMsS0FBSyxDQUFDLEVBQ2IsQ0FBQyxLQUFLLEVBQUMsS0FBSyxDQUFDLEVBQ2IsQ0FBQyxLQUFLLEVBQUMsS0FBSyxDQUFDLEVBQ2IsQ0FBQyxJQUFJLEVBQUMsS0FBSyxDQUFDLEVBQ1osQ0FBQyxLQUFLLEVBQUMsS0FBSyxDQUFDLEVBQ2IsQ0FBQyxLQUFLLEVBQUMsS0FBSyxDQUFDLEVBQ2IsQ0FBQyxLQUFLLEVBQUMsS0FBSyxDQUFDLEVBQ2IsQ0FBQyxLQUFLLEVBQUMsS0FBSyxDQUFDLEVBQ2IsQ0FBQyxLQUFLLEVBQUMsS0FBSyxDQUFDLEVBQ2IsQ0FBQyxLQUFLLEVBQUMsS0FBSyxDQUFDLEVBQ2IsQ0FBQyxLQUFLLEVBQUMsS0FBSyxDQUFDLEVBQ2IsQ0FBQyxNQUFNLEVBQUMsS0FBSyxDQUFDLEVBQ2QsQ0FBQyxNQUFNLEVBQUMsS0FBSyxDQUFDLEVBQ2QsQ0FBQyxLQUFLLEVBQUMsS0FBSyxDQUFDLEVBQ2IsQ0FBQyxNQUFNLEVBQUMsS0FBSyxDQUFDLEVBQ2QsQ0FBQyxNQUFNLEVBQUMsS0FBSyxDQUFDLEVBQ2QsQ0FBQyxNQUFNLEVBQUMsS0FBSyxDQUFDLEVBQ2QsQ0FBQyxNQUFNLEVBQUMsS0FBSyxDQUFDLEVBQ2QsQ0FBQyxNQUFNLEVBQUMsS0FBSyxDQUFDLEVBQ2QsQ0FBQyxNQUFNLEVBQUMsS0FBSyxDQUFDLEVBQ2QsQ0FBQyxNQUFNLEVBQUMsS0FBSyxDQUFDLEVBQ2QsQ0FBQyxNQUFNLEVBQUMsS0FBSyxDQUFDLEVBQ2QsQ0FBQyxNQUFNLEVBQUMsS0FBSyxDQUFDLEVBQ2QsQ0FBQyxLQUFLLEVBQUMsS0FBSyxDQUFDLEVBQ2IsQ0FBQyxNQUFNLEVBQUMsS0FBSyxDQUFDLEVBQ2QsQ0FBQyxNQUFNLEVBQUMsS0FBSyxDQUFDLENBQ2IsQ0FBQzs7QUFFRixNQUFNLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQ3pCLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FDaEIsQ0FBQyxLQUFLLEVBQUMsSUFBSSxDQUFDLEVBQ1osQ0FBQyxHQUFHLEVBQUMsSUFBSSxDQUFDLEVBQ1YsQ0FBQyxLQUFLLEVBQUMsSUFBSSxDQUFDLEVBQ1osQ0FBQyxLQUFLLEVBQUMsSUFBSSxDQUFDLEVBQ1osQ0FBQyxLQUFLLEVBQUMsSUFBSSxDQUFDLEVBQ1osQ0FBQyxLQUFLLEVBQUMsSUFBSSxDQUFDLEVBQ1osQ0FBQyxLQUFLLEVBQUMsSUFBSSxDQUFDLEVBQ1osQ0FBQyxLQUFLLEVBQUMsSUFBSSxDQUFDLEVBQ1osQ0FBQyxLQUFLLEVBQUMsSUFBSSxDQUFDLEVBQ1osQ0FBQyxLQUFLLEVBQUMsSUFBSSxDQUFDLEVBQ1osQ0FBQyxLQUFLLEVBQUMsSUFBSSxDQUFDLEVBQ1osQ0FBQyxLQUFLLEVBQUMsSUFBSSxDQUFDLEVBQ1osQ0FBQyxLQUFLLEVBQUMsSUFBSSxDQUFDLEVBQ1osQ0FBQyxLQUFLLEVBQUMsSUFBSSxDQUFDLEVBQ1osQ0FBQyxLQUFLLEVBQUMsSUFBSSxDQUFDLEVBQ1osQ0FBQyxLQUFLLEVBQUMsSUFBSSxDQUFDLEVBQ1osQ0FBQyxLQUFLLEVBQUMsSUFBSSxDQUFDLEVBQ1osQ0FBQyxNQUFNLEVBQUMsSUFBSSxDQUFDLEVBQ2IsQ0FBQyxNQUFNLEVBQUMsSUFBSSxDQUFDLEVBQ2IsQ0FBQyxNQUFNLEVBQUMsSUFBSSxDQUFDLEVBQ2IsQ0FBQyxNQUFNLEVBQUMsSUFBSSxDQUFDLEVBQ2IsQ0FBQyxNQUFNLEVBQUMsSUFBSSxDQUFDLEVBQ2IsQ0FBQyxNQUFNLEVBQUMsSUFBSSxDQUFDLEVBQ2IsQ0FBQyxNQUFNLEVBQUMsSUFBSSxDQUFDLEVBQ2IsQ0FBQyxNQUFNLEVBQUMsSUFBSSxDQUFDLEVBQ2IsQ0FBQyxNQUFNLEVBQUMsSUFBSSxDQUFDLEVBQ2IsQ0FBQyxNQUFNLEVBQUMsSUFBSSxDQUFDLENBQ1osQ0FBQyxDQUFDOztBQUVILE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FDZixDQUFDLEtBQUssRUFBQyxJQUFJLENBQUMsRUFBRSxFQUFDLEdBQUcsRUFBQyxPQUFPLEVBQUMsS0FBSyxFQUFDLE9BQU8sRUFBQyxPQUFPLENBQUMsQ0FBQyxFQUNsRCxDQUFDLEtBQUssRUFBQyxJQUFJLENBQUMsR0FBRyxFQUFDLEdBQUcsRUFBQyxPQUFPLEVBQUMsS0FBSyxFQUFDLE9BQU8sQ0FBQyxDQUFDLEVBQzNDLENBQUMsS0FBSyxFQUFDLElBQUksQ0FBQyxHQUFHLEVBQUMsR0FBRyxFQUFDLE9BQU8sRUFBQyxLQUFLLEVBQUMsT0FBTyxDQUFDLENBQUMsRUFDM0MsQ0FBQyxLQUFLLEVBQUMsSUFBSSxDQUFDLEdBQUcsRUFBQyxHQUFHLEVBQUMsT0FBTyxFQUFDLEtBQUssRUFBQyxPQUFPLENBQUMsQ0FBQyxFQUMzQyxDQUFDLEtBQUssRUFBQyxJQUFJLENBQUMsR0FBRyxFQUFDLEdBQUcsRUFBQyxPQUFPLEVBQUMsS0FBSyxFQUFDLE9BQU8sQ0FBQyxDQUFDLEVBQzNDLENBQUMsTUFBTSxFQUFDLElBQUksQ0FBQyxHQUFHLEVBQUMsR0FBRyxFQUFDLE9BQU8sRUFBQyxLQUFLLEVBQUMsT0FBTyxDQUFDLENBQUMsRUFDNUMsQ0FBQyxNQUFNLEVBQUMsSUFBSSxDQUFDLEdBQUcsRUFBQyxHQUFHLEVBQUMsT0FBTyxFQUFDLEtBQUssRUFBQyxPQUFPLENBQUMsQ0FBQyxFQUM1QyxDQUFDLE1BQU0sRUFB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UUFBUSxDQUFDLFdBQVcsR0FBRyxTQUFTLENBQUM7QUFDbkQsVUFBTSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsQ0FBQztBQUM3QixRQUFHLENBQUMsR0FBRyxFQUFDO0FBQ1AsMEJBQXFCLENBQUMsT0FBTyxDQUFDLENBQUM7S0FDL0I7SUFDRDtBQUNELFVBQU8sRUFBRSxDQUFDO0dBQ1YsQ0FBQyxDQUFDO0VBQ0gsQ0FBQyxDQUNELElBQUksQ0FBQyxZQUFJLEVBQ1QsQ0FBQyxTQUNJLENBQUMsVUFBQyxHQUFHLEVBQUc7QUFBQyxTQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0VBQUMsQ0FBQyxDQUFDO0NBSW5DIiwiZmlsZSI6ImppbmdsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcclxuaW1wb3J0IGRlbm9kZWlmeSBmcm9tICcuLi9qcy9kZW5vZGVpZnkuanMnO1xyXG5pbXBvcnQgaXBjIGZyb20gJ2lwYyc7XHJcbmltcG9ydCByZW1vdGUgZnJvbSAncmVtb3RlJztcclxuaW1wb3J0IHsgRXZlbnRFbWl0dGVyIH0gZnJvbSAnZXZlbnRzJztcclxuIFxyXG52YXIgZnMgPSByZW1vdGUucmVxdWlyZSgnZnMnKTtcclxudmFyIHJlYWRGaWxlID0gZGVub2RlaWZ5KGZzLnJlYWRGaWxlKTtcclxuXHJcbmlwYy5vbigncGxheVZpZGVvJywgZnVuY3Rpb24gKHBhdGgpIHtcclxuICAgIGQzLnNlbGVjdCgnYm9keScpXHJcblx0XHQuYXBwZW5kKCd2aWRlbycpXHJcblx0XHQuYXR0cih7IHNyYzogcGF0aCwgd2lkdGg6ICcxMDAlJywgaGVpZ2h0OiAnMTAwJScsIGF1dG9wbGF5OiAnYXV0b3BsYXknLCBhdXRvYnVmZmVyOiAnYXV0b2J1ZmZlcicgfSlcclxuXHRcdC5vbignZW5kZWQnLCBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdGQzLnNlbGVjdCh0aGlzKS5yZW1vdmUoKTtcclxuXHRcdFx0aXBjLnNlbmQoJ3BsYXlWaWRlb0VuZCcsIHBhdGgpO1xyXG5cdFx0fSk7XHJcbn0pO1xyXG5cclxuZnVuY3Rpb24gdG9BcnJheUJ1ZmZlcihidWZmZXIpIHtcclxuICAgIHZhciBhYiA9IG5ldyBBcnJheUJ1ZmZlcihidWZmZXIubGVuZ3RoKTtcclxuICAgIHZhciB2aWV3ID0gbmV3IFVpbnQ4QXJyYXkoYWIpO1xyXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBidWZmZXIubGVuZ3RoOyArK2kpIHtcclxuICAgICAgICB2aWV3W2ldID0gYnVmZmVyW2ldO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGFiO1xyXG59XHJcbmlwYy5vbigncGxheScsZnVuY3Rpb24ocGF0aCl7XHJcblx0cGxheUNvbnRlbnRzKHBhdGgpO1xyXG59KTtcclxuXHJcbnZhciBhdWRpb0N0eDtcclxuXHR2YXIgbHlsaWNzID0gW1xyXG5cdFx0J0hhIGhhaGFoYS4uLicsXHJcblx0XHQn44GK44GL44GX44GEIOODj+ODg+ODj+ODg+ODj+ODg+ODjycsXHJcblx0XHQnU25ha2UgaXMgaGVyZS4nLFxyXG5cdFx0J011c2ljIG11c2ljIG11c2ljIG11c2ljIHNob3chJyxcclxuXHRcdCdPaCwgdGhlIGhvdHRlc3QgdGhpbmcgb2YgdGhlIHdvcmxkIScsXHJcblx0XHQnT2YgdGhlIHdvcmxkLi4uIE9oIScsXHJcblx0XHQnWWVsbG93IE1hZ2ljIE9yY2hlc3RyYSEhJyxcclxuXHRcdCdNdXNpYy4uLiBNdXNpYy4uLiBZIE0gTycsXHJcblx0XHQnWU1PIHJlYWR5IHRvIGxheSBvbiB5b3UhJyxcclxuXHRcdCdOaWNlIGFnZS4nXHRcdFxyXG5cdF07XHJcblxyXG5cclxudmFyIHN2ZzsgLy9kMy5zZWxlY3QoJ2JvZHknKS5hcHBlbmQoJ3N2ZycpLmF0dHIoeyd3aWR0aCc6JzEwMjRweCcsJ2hlaWdodCc6Jzc2OHB4J30pO1xyXG5cdFx0XHRcclxud2luZG93Lm9ubG9hZCA9ICgpPT57XHJcblx0Ly8g5Yid5pyf5YyW5a6M5LqGXHJcblx0YXVkaW9DdHggPSBuZXcgQXVkaW9Db250ZXh0KCk7XHJcbn1cclxuXHJcbmNsYXNzIFRyYWNrIGV4dGVuZHMgRXZlbnRFbWl0dGVyIHtcclxuXHRjb25zdHJ1Y3RvcihhcnJheSlcclxuXHR7XHJcblx0XHRzdXBlcigpO1xyXG5cdFx0dGhpcy5zZXFEYXRhID0gYXJyYXk7XHJcblx0XHR0aGlzLnNlcUNvdW50ZXIgPSAwO1xyXG5cdH1cclxuXHRcclxuXHRzZXF1ZW5jZShjdXJyZW50VGltZSkge1xyXG5cdFx0dmFyIGxlbiA9IHRoaXMuc2VxRGF0YS5sZW5ndGg7XHJcblx0XHR3aGlsZSAobGVuID4gdGhpcy5zZXFDb3VudGVyKSB7XHJcblx0XHRcdHZhciBzZXEgPSB0aGlzLnNlcURhdGFbdGhpcy5zZXFDb3VudGVyXTtcclxuXHRcdFx0aWYgKHNlcVswXSA8PSBjdXJyZW50VGltZSkge1xyXG5cdFx0XHRcdHNlcVsxXShjdXJyZW50VGltZSk7XHJcblx0XHRcdFx0Kyt0aGlzLnNlcUNvdW50ZXI7XHJcblx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0cmV0dXJuO1xyXG5cdFx0XHR9XHJcblx0XHRcdGlmKGxlbiA8PSB0aGlzLnNlcUNvdW50ZXIpe1xyXG5cdFx0XHRcdHRoaXMuZW1pdCgnZW5kJyk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcbn07XHJcblxyXG5jbGFzcyBUcmFja3MgZXh0ZW5kcyBFdmVudEVtaXR0ZXIge1xyXG5cdGNvbnN0cnVjdG9yKCl7XHJcblx0XHRzdXBlcigpO1xyXG5cdFx0dGhpcy50cmFja3MgPSBbXTtcclxuXHRcdHRoaXMuZW5kVHJhY2tDb3VudCA9IDA7XHJcblx0XHR0aGlzLmVuZCA9IGZhbHNlO1xyXG5cdH1cclxuXHRcclxuXHRhZGRUcmFjayhhcnJheSl7XHJcblx0XHR2YXIgdHJhY2sgPSBuZXcgVHJhY2soYXJyYXkpO1xyXG5cdFx0dGhpcy50cmFja3MucHVzaCh0cmFjayk7XHJcblx0XHR0cmFjay5vbignZW5kJywoKT0+e1xyXG5cdFx0XHQrK3RoaXMuZW5kVHJhY2tDb3VudDtcclxuXHRcdFx0aWYodGhpcy5lbmRUcmFja0NvdW50ID09IHRoaXMudHJhY2tzLmxlbmd0aCl7XHJcblx0XHRcdFx0dGhpcy5lbWl0KCdlbmQnKTtcclxuXHRcdFx0XHR0aGlzLmVuZCA9IHRydWU7XHJcblx0XHRcdH1cdFx0XHRcclxuXHRcdH0pO1xyXG5cdH1cclxuXHRcclxuXHRzZXF1ZW5jZShjdXJyZW50VGltZSl7XHJcblx0XHR0aGlzLnRyYWNrcy5mb3JFYWNoKCh0cmFjayk9PntcclxuXHRcdFx0dHJhY2suc2VxdWVuY2UoY3VycmVudFRpbWUpO1xyXG5cdFx0fSk7XHJcblx0fVxyXG59XHJcblxyXG52YXIgdHJhY2tzID0gbmV3IFRyYWNrcygpO1xyXG5cclxudmFyIHNlcURhdGEgPSBbXHJcblx0Ly8gc2VxdGltZSBhbmltXHJcblsxLjAyNSxoaWhhdF0sXHJcblsxLjQyMixoaWhhdF0sXHJcblsxLjgxOSxoaWhhdF0sXHJcblsyLjIxNixoaWhhdF0sXHJcblsyLjYxMyxoaWhhdF0sXHJcblszLjAxLGhpaGF0XSxcclxuWzMuNDA3LGhpaGF0XSxcclxuWzMuODA0LGhpaGF0XSxcclxuWzQuMjAxLGhpaGF0XSxcclxuWzQuNTk4LGhpaGF0XSxcclxuWzQuOTk1LGhpaGF0XSxcclxuWzUuMzkyLGhpaGF0XSxcclxuWzUuNzg5LGhpaGF0XSxcclxuWzYuMTg2LGhpaGF0XSxcclxuWzYuNTgzLGhpaGF0XSxcclxuWzYuOTgsaGloYXRdLFxyXG5bNy4zNzcsaGloYXRdLFxyXG5bNy43NzQsaGloYXRdLFxyXG5bOC4xNzEsaGloYXRdLFxyXG5bOC41NjgsaGloYXRdLFxyXG5bOC45NjUsaGloYXRdLFxyXG5bOS4zNjIsaGloYXRdLFxyXG5bOS43NTksaGloYXRdLFxyXG5bMTAuMTU2LGhpaGF0XSxcclxuWzEwLjU1MyxoaWhhdF0sXHJcblsxMC45NSxoaWhhdF0sXHJcblsxMS4zNDcsaGloYXRdLFxyXG5bMTEuNzQ0LGhpaGF0XSxcclxuWzEyLjE0MSxoaWhhdF0sXHJcblsxMi41MzgsaGloYXRdLFxyXG5bMTIuOTM1LGhpaGF0XSxcclxuWzEzLjMzMixoaWhhdF0sXHJcblsxMy43MjksaGloYXRdLFxyXG5bMTQuMTI2LGhpaGF0XSxcclxuWzE0LjUyMyxoaWhhdF0sXHJcblsxNC45MixoaWhhdF0sXHJcblsxNS4zMTcsaGloYXRdLFxyXG5bMTUuNzE0LGhpaGF0XVxyXG5dO1xyXG5cclxudHJhY2tzLmFkZFRyYWNrKHNlcURhdGEpO1xyXG50cmFja3MuYWRkVHJhY2soW1xyXG5bMi41NDEsYmFzc10sXHJcblsyLjYsYmFzc10sIFxyXG5bMi45MzksYmFzc10sXHJcblszLjU4MCxiYXNzXSxcclxuWzQuMTk0LGJhc3NdLFxyXG5bNC41MzgsYmFzc10sXHJcbls0Ljc5MSxiYXNzXSxcclxuWzUuMTIwLGJhc3NdLFxyXG5bNS4zNzMsYmFzc10sXHJcbls1LjcxMixiYXNzXSxcclxuWzUuOTk3LGJhc3NdLFxyXG5bNi4zMDksYmFzc10sXHJcbls2LjU3MyxiYXNzXSxcclxuWzYuNTc5LGJhc3NdLFxyXG5bOS4zNzMsYmFzc10sXHJcbls5LjUwMyxiYXNzXSxcclxuWzkuODkyLGJhc3NdLFxyXG5bMTEuMzUwLGJhc3NdLFxyXG5bMTEuNjUwLGJhc3NdLFxyXG5bMTIuNDc4LGJhc3NdLFxyXG5bMTIuOTQxLGJhc3NdLFxyXG5bMTMuMjcwLGJhc3NdLFxyXG5bMTQuMDU1LGJhc3NdLFxyXG5bMTQuNDY3LGJhc3NdLFxyXG5bMTQuNTI3LGJhc3NdLFxyXG5bMTUuMDk1LGJhc3NdLFxyXG5bMTUuNjYzLGJhc3NdXHJcbl0pO1xyXG5cclxudHJhY2tzLmFkZFRyYWNrKFtcclxuXHRbNC4xOTgsdGV4dCgxMCwxNTAsJ011c2ljJywncmVkJywnMTYwcHgnLCdzYWdvZScpXSxcclxuXHRbNC44MzgsdGV4dCg1MDAsMjAwLCdNdXNpYycsJ3JlZCcsJzE0MHB4JyldLFxyXG5cdFs1LjM5NCx0ZXh0KDIwMCwyNTAsJ011c2ljJywncmVkJywnMTMwcHgnKV0sXHJcblx0WzUuOTgwLHRleHQoNjAwLDMwMCwnTXVzaWMnLCdyZWQnLCcxMjBweCcpXSxcclxuXHRbNi43NzUsdGV4dCgyMDAsNTAwLCdTaG93IScsJ3JlZCcsJzI0MHB4JyldLFxyXG5cdFsxMS4zNDMsdGV4dCgyMDAsNDAwLCdNdXNpYycsJ3JlZCcsJzI0MHB4JyldLFxyXG5cdFsxMi45NDEsdGV4dCgyMDAsNjAwLCdNdXNpYycsJ3JlZCcsJzI0MHB4JyldLFxyXG5cdFsxNC41MTgsdGV4dCgyNTAsNTUwLCdZJywncmVkJywnNTgwcHgnKV0sXHJcblx0WzE1LjExNyx0ZXh0KDI1MCw1NTAsJ00nLCdyZWQnLCc1ODBweCcpXSxcclxuXHRbMTUuNzEzLHRleHQoMjUwLDU1MCwnTycsJ3JlZCcsJzU4MHB4JyldXHJcbl0pO1xyXG5cclxudmFyIGZvbnRDYWNoZTtcclxuXHJcbmZ1bmN0aW9uIHRleHQoeCx5LG1lcyxjb2xvcixzaXplLGZvbnQpe1xyXG5cdHJldHVybiAoKSA9PiB7XHJcblx0XHRmb250Q2FjaGUgPSBmb250IHx8IGZvbnRDYWNoZSB8fCAnJztcclxuXHRcdHN2Zy5hcHBlbmQoJ3RleHQnKVxyXG5cdFx0XHQuYXR0cih7eDp4LHk6eSxmaWxsOmNvbG9yLG9wYWNpdHk6MS4wfSlcclxuXHRcdFx0LnN0eWxlKHsnZm9udC1zaXplJzpzaXplLCdmb250LWZhbWlseSc6Zm9udENhY2hlfSlcclxuXHRcdFx0LnRleHQobWVzKVxyXG5cdFx0XHQudHJhbnNpdGlvbigpXHJcblx0XHRcdC5kdXJhdGlvbigxMDAwKVxyXG5cdFx0XHQuYXR0cih7b3BhY2l0eTowLjB9KVxyXG5cdFx0XHQucmVtb3ZlKCk7XHJcblx0fTtcclxufVxyXG5cclxuZnVuY3Rpb24gYmFzcygpXHJcbntcclxuXHR2YXIgeCA9IDUxMixcclxuXHRcdHkgPSAzODQ7XHJcblx0dmFyIGcgPSBzdmdcclxuXHQuYXBwZW5kKCdnJyk7XHJcblx0XHJcblx0Zy5hdHRyKHt0cmFuc2Zvcm06J3RyYW5zbGF0ZSgnICsgeCArICcgJyAgKyB5ICArICcpJ30pXHJcblx0LnRyYW5zaXRpb24oKVxyXG5cdC5kZWxheSg1MDApXHJcblx0LnJlbW92ZSgpO1xyXG5cdFxyXG5cdHZhciBjb2xvcnMgPSBbJ3doaXRlJywncmVkJywnYmx1ZScsJ2dyZWVuJywnbWFnZW50YScsJ3llbGxvdyddO1xyXG5cdHZhciBjb2xvciA9IGNvbG9yc1soTWF0aC5yYW5kb20oKSAqIDYpIHwgMF07XHJcbiAgICBnLmFwcGVuZCgnZWxsaXBzZScpXHJcblx0LmF0dHIoe1xyXG5cdFx0cng6NjgwLHJ5OjY4MCxcclxuXHRcdGN4OjAsY3k6MCxcclxuXHRcdCdzdHJva2Utd2lkdGgnOjAsXHJcblx0XHRmaWxsOmNvbG9yLFxyXG5cdFx0b3BhY2l0eTowLjVcclxuXHR9KVxyXG5cdC50cmFuc2l0aW9uKClcclxuXHQuZHVyYXRpb24oMjUwKVxyXG5cdC5hdHRyKHtvcGFjaXR5OjAuMCxyeDowLHJ5OjB9KTtcclxufVxyXG5cclxuZnVuY3Rpb24gaGloYXQoKXtcclxuXHR2YXIgZyA9IHN2Z1xyXG5cdC5hcHBlbmQoJ2cnKTtcclxuXHR2YXIgeCA9IE1hdGgucmFuZG9tKCkgKiAoMTAyNCAtIDQwMCk7XHJcblx0dmFyIHkgPSBNYXRoLnJhbmRvbSgpICogKDc2OCAtIDEwMCkgKyA1MDtcclxuICAgIHZhciByID0gNDA7XHJcblx0dmFyIGNvbG9ycyA9IFsnd2hpdGUnLCdyZWQnLCdibHVlJywnZ3JlZW4nLCdtYWdlbnRhJywneWVsbG93J107XHJcblx0dmFyIGNvbG9yID0gY29sb3JzWyhNYXRoLnJhbmRvbSgpICogNikgfCAwXTtcclxuXHRnLmF0dHIoJ3RyYW5zZm9ybScsJ3RyYW5zbGF0ZSgnICsgeCArICcgJyArIHkgKyAnKScpO1xyXG5cdGcuYXBwZW5kKCdlbGxpcHNlJylcclxuXHQuYXR0cih7XHJcblx0XHRyeDpyLHJ5OnIsXHJcblx0XHRjeDowLGN5OjAsXHJcblx0XHQnc3Ryb2tlLXdpZHRoJzowLFxyXG5cdFx0ZmlsbDpjb2xvcixcclxuXHRcdG9wYWNpdHk6MC42XHJcblx0XHR9KVxyXG5cdC50cmFuc2l0aW9uKClcclxuXHQuZHVyYXRpb24oMjAwKVxyXG5cdC5hdHRyKHtjeDoxNTAscng6ciAqIDIuNX0pO1xyXG5cdFxyXG5cdGcuYXBwZW5kKCdlbGxpcHNlJylcclxuXHQuYXR0cih7XHJcblx0XHRyeDpyLHJ5OnIsXHJcblx0XHRjeDozMDAsY3k6MCxcclxuXHRcdCdzdHJva2Utd2lkdGgnOjAsXHJcblx0XHRmaWxsOmNvbG9yLFxyXG5cdFx0b3BhY2l0eTowLjBcclxuXHRcdH0pXHJcblx0LnRyYW5zaXRpb24oKVxyXG5cdC5kZWxheSgyMDApXHJcblx0LmF0dHIoJ29wYWNpdHknLDAuNik7XHJcblxyXG5cdGcuYXBwZW5kKCdlbGxpcHNlJylcclxuXHQuYXR0cih7XHJcblx0XHRyeDpyLHJ5OnIsXHJcblx0XHRjeDo0MDAsY3k6MCxcclxuXHRcdCdzdHJva2Utd2lkdGgnOjAsXHJcblx0XHRmaWxsOmNvbG9yLFxyXG5cdFx0b3BhY2l0eTowLjBcclxuXHRcdH0pXHJcblx0LnRyYW5zaXRpb24oKVxyXG5cdC5kZWxheSgzMzIpXHJcblx0LmF0dHIoJ29wYWNpdHknLDAuNik7XHJcblxyXG5cdHZhciB4ID0gTWF0aC5yYW5kb20oKSAqIDEwMjQ7XHJcblx0dmFyIHkgPSBNYXRoLnJhbmRvbSgpICogNzY4O1xyXG5cdFxyXG5cdGcuYXR0cih7b3BhY2l0eTowLjV9KVxyXG5cdC50cmFuc2l0aW9uKClcclxuXHQuZGVsYXkoMzY3KVxyXG5cdC5kdXJhdGlvbigyNTAwKVxyXG5cdC5hdHRyKHsnb3BhY2l0eSc6MC4wLHRyYW5zZm9ybTondHJhbnNsYXRlKCcgKyB4ICsgJyAnICsgeSArICcpIHNjYWxlKDApJ30pXHJcblx0LnJlbW92ZSgpO1xyXG5cdFxyXG5cdC8vIC50cmFuc2l0aW9uKClcclxuXHQvLyAuZHVyYXRpb24oNSlcclxuXHJcblx0Ly8gLmF0dHIoJ29wYWNpdHknLDAuMCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHBsYXlDb250ZW50cyhwYXRoKVxyXG57XHJcblx0Y29uc29sZS5sb2cocGF0aCk7XHJcblx0cmVhZEZpbGUocGF0aClcclxuXHQudGhlbigoZGF0YSk9PntcclxuXHRcdHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSxyZWplY3QpPT57XHJcblx0XHRcdHZhciBhYiA9IHRvQXJyYXlCdWZmZXIoZGF0YSk7IFxyXG5cdFx0XHRjb25zb2xlLmxvZyhhYi5ieXRlTGVuZ3RoKTtcclxuXHRcdFx0YXVkaW9DdHguZGVjb2RlQXVkaW9EYXRhKGFiLChidWZmZXIpPT57XHJcblx0XHRcdFx0cmVzb2x2ZShidWZmZXIpO1xyXG5cdFx0XHR9LChlcnIpPT57cmVqZWN0KG5ldyBFcnJvcignZGVjb2RlQXVkaW9EYXRhKCk6ZXJyb3I6JykpO30pO1xyXG5cdFx0fSk7XHJcblx0fSlcclxuXHQudGhlbigoYnVmZmVyKT0+e1xyXG5cdFx0cmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLHJlamVjdCk9PntcclxuXHRcdFx0dmFyIHNvdXJjZSA9IGF1ZGlvQ3R4LmNyZWF0ZUJ1ZmZlclNvdXJjZSgpO1xyXG5cdFx0XHR2YXIgZW5kID0gZmFsc2U7XHJcblx0XHRcdHNvdXJjZS5idWZmZXIgPSBidWZmZXI7XHJcblx0XHRcdHNvdXJjZS5jb25uZWN0KGF1ZGlvQ3R4LmRlc3RpbmF0aW9uKTtcclxuXHRcdFx0c291cmNlLm9uZW5kZWQgPSAoKT0+XHJcblx0XHRcdHtcclxuXHRcdFx0XHRjb25zb2xlLmxvZygnZW5kJyk7XHJcblx0XHRcdFx0ZW5kID0gdHJ1ZTtcclxuXHRcdFx0XHRyZXNvbHZlKCk7XHJcblx0XHRcdH0gXHJcblx0XHRcdC8vIOOCouODi+ODoeODvOOCt+ODp+ODs+OBruOCueOCv+ODvOODiFxyXG5cdFx0XHRzdmcgPSBcclxuXHRcdFx0XHRkMy5zZWxlY3QoJ2JvZHknKVxyXG5cdFx0XHRcdC5hcHBlbmQoJ3N2ZycpXHJcblx0XHRcdFx0LmF0dHIoeyd3aWR0aCc6JzEwMjRweCcsJ2hlaWdodCc6Jzc2OHB4J30pO1xyXG5cdFx0XHRzb3VyY2Uuc3RhcnQoMCk7XHJcblx0XHRcdHZhciBzdGFydFRpbWUgPSBhdWRpb0N0eC5jdXJyZW50VGltZSAtIDAuMTtcclxuXHRcdFx0ZnVuY3Rpb24gYW5pbWF0ZSgpXHJcblx0XHRcdHtcclxuXHRcdFx0XHR2YXIgY3VycmVudFRpbWUgPSBhdWRpb0N0eC5jdXJyZW50VGltZSAtIHN0YXJ0VGltZTtcclxuXHRcdFx0XHR0cmFja3Muc2VxdWVuY2UoY3VycmVudFRpbWUpO1xyXG5cdFx0XHRcdGlmKCFlbmQpe1xyXG5cdFx0XHRcdFx0cmVxdWVzdEFuaW1hdGlvbkZyYW1lKGFuaW1hdGUpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0XHRhbmltYXRlKCk7XHJcblx0XHR9KTtcclxuXHR9KVxyXG5cdC50aGVuKCgpPT57XHJcblx0fSlcclxuXHQuY2F0Y2goKGVycik9Pntjb25zb2xlLmxvZyhlcnIpO30pO1xyXG5cclxuXHRcclxuXHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
