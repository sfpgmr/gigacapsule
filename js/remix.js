'use strict';

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _jsSliderJs = require('../js/slider.js');

var _jsSliderJs2 = _interopRequireDefault(_jsSliderJs);

var _ipc = require('ipc');

var _ipc2 = _interopRequireDefault(_ipc);

var _remote = require('remote');

var _remote2 = _interopRequireDefault(_remote);

var _jsDenodeifyJs = require('../js/denodeify.js');

var _jsDenodeifyJs2 = _interopRequireDefault(_jsDenodeifyJs);

var fs = require('fs');

var readFile = (0, _jsDenodeifyJs2['default'])(fs.readFile);
var audioCtx = new AudioContext();
var resources = [];

function toArrayBuffer(buffer) {
	var ab = new ArrayBuffer(buffer.length);
	var view = new Uint8Array(ab);
	var len = buffer.length;
	for (var i = 0; i < len; ++i) {
		view[i] = buffer[i];
	}
	return ab;
}

window.onload = function () {
	var mes = d3.select('body').append('h1').classed('mes', true).text('準備中です。少々お待ちください。。');

	var id = setInterval((function () {
		var i = 0;
		return function () {
			mes.style('opacity', i);
			i = ++i & 0x1;
		};
	})(), 500);

	_ipc2['default'].on('resources', function (r) {
		clearInterval(id);
		mes.remove();
		resources = r;

		var svg = d3.select('body').append('svg').attr({ width: 1024, height: 768 });
		// var slider = new Slider(svg,{x:50 + 70,y:768 - 240,domain:[2.0,0.0]});
		// slider.value = 1.0;

		var promise = Promise.resolve();
		var sources = [];

		for (var i = 0; i < 7; ++i) {
			promise = promise.then(readFile.bind(null, resources[i + 7].path)).then(function (data) {
				return new Promise(function (resolve, reject) {
					var ab = toArrayBuffer(data);
					audioCtx.decodeAudioData(ab, function (buffer) {
						resolve(buffer);
					}, function (err) {
						reject(new Error('decodeAudioData():error:'));
					});
				});
			}).then((function (idx) {
				return function (buffer) {
					var source = audioCtx.createBufferSource();
					source.buffer = buffer;
					source.loop = false;
					sources.push(source);
					var gain = audioCtx.createGain();
					source.connect(gain);
					gain.connect(audioCtx.destination);
					var slider = new _jsSliderJs2['default'](svg, { x: 50 + idx * 70, y: 768 - 240, domain: [2.0, 0.0] });
					gain.gain.value = slider.value = 1.0;
					slider.on('change', function (v) {
						gain.gain.value = v;
					});
				};
			})(i))['catch'](function (e) {
				console.log(e);
			});
		}

		promise.then(function () {
			console.log('play');
			var current = audioCtx.currentTime + 0.01;
			sources.forEach(function (s) {
				s.start(current);
			});
		});
	});

	// var slider = new Slider(svg,{x:50,y:768 - 220});
	// var slider2 = new Slider(svg,{x:120,y:768 - 220});
	// slider.value = 0.5;
};
//# sourceMappingURL=data:application/json;base64,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LENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDZixDQUFDLENBQUM7R0FDSDs7QUFFRCxTQUFPLENBQ04sSUFBSSxDQUFDLFlBQUk7QUFDVCxVQUFPLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQ3BCLE9BQUksT0FBTyxHQUFHLFFBQVEsQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDO0FBQzFDLFVBQU8sQ0FBQyxPQUFPLENBQUMsVUFBQyxDQUFDLEVBQUc7QUFDcEIsS0FBQyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUNqQixDQUFDLENBQUM7R0FDSCxDQUFDLENBQUM7RUFDRixDQUFDLENBQUM7Ozs7O0NBTUosQ0FBQSIsImZpbGUiOiJyZW1peC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTbGlkZXIgZnJvbSAnLi4vanMvc2xpZGVyLmpzJztcclxuaW1wb3J0IGlwYyBmcm9tICdpcGMnO1xyXG5pbXBvcnQgcmVtb3RlIGZyb20gJ3JlbW90ZSc7XHJcbnZhciBmcyA9IHJlcXVpcmUoJ2ZzJyk7XHJcbmltcG9ydCBkZW5vZGVpZnkgZnJvbSAnLi4vanMvZGVub2RlaWZ5LmpzJztcclxuXHJcbnZhciByZWFkRmlsZSA9IGRlbm9kZWlmeShmcy5yZWFkRmlsZSk7XHJcbnZhciBhdWRpb0N0eCA9IG5ldyBBdWRpb0NvbnRleHQoKTtcclxudmFyIHJlc291cmNlcyA9IFtdO1xyXG5cclxuZnVuY3Rpb24gdG9BcnJheUJ1ZmZlcihidWZmZXIpIHtcclxuICAgIHZhciBhYiA9IG5ldyBBcnJheUJ1ZmZlcihidWZmZXIubGVuZ3RoKTtcclxuXHR2YXIgdmlldyA9IG5ldyBVaW50OEFycmF5KGFiKTtcclxuXHR2YXIgbGVuID0gYnVmZmVyLmxlbmd0aDtcclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyArK2kpIHtcclxuICAgICAgICB2aWV3W2ldID0gYnVmZmVyW2ldO1xyXG4gICAgfVxyXG4gICByZXR1cm4gYWI7XHJcbn1cclxuXHJcbndpbmRvdy5vbmxvYWQgPSAoKT0+e1xyXG5cdHZhciBtZXMgPSBkMy5zZWxlY3QoJ2JvZHknKVxyXG5cdC5hcHBlbmQoJ2gxJylcclxuXHQuY2xhc3NlZCgnbWVzJyx0cnVlKVxyXG5cdC50ZXh0KCfmupblgpnkuK3jgafjgZnjgILlsJHjgIXjgYrlvoXjgaHjgY/jgaDjgZXjgYTjgILjgIInKTtcclxuXHRcclxuXHR2YXIgaWQgPSBzZXRJbnRlcnZhbCgoKCk9PntcclxuXHRcdHZhciBpID0gMDtcclxuXHRcdHJldHVybiAoKT0+e1xyXG5cdFx0XHRtZXMuc3R5bGUoJ29wYWNpdHknLGkpO1xyXG5cdFx0XHRpID0gKytpICYgMHgxO1xyXG5cdFx0fVxyXG5cdH0pKCksNTAwKTtcclxuXHRcclxuXHRpcGMub24oJ3Jlc291cmNlcycsKHIpPT57XHJcblx0XHRjbGVhckludGVydmFsKGlkKTtcclxuXHRcdG1lcy5yZW1vdmUoKTtcclxuXHRcdHJlc291cmNlcyA9IHI7XHJcblxyXG5cdFx0dmFyIHN2ZyA9IGQzLnNlbGVjdCgnYm9keScpLmFwcGVuZCgnc3ZnJylcclxuXHRcdC5hdHRyKHt3aWR0aDoxMDI0LGhlaWdodDo3Njh9KTtcclxuXHRcdC8vIHZhciBzbGlkZXIgPSBuZXcgU2xpZGVyKHN2Zyx7eDo1MCArIDcwLHk6NzY4IC0gMjQwLGRvbWFpbjpbMi4wLDAuMF19KTtcclxuXHRcdC8vIHNsaWRlci52YWx1ZSA9IDEuMDtcclxuXHRcdFxyXG5cdFx0XHJcblx0XHR2YXIgcHJvbWlzZSA9IFByb21pc2UucmVzb2x2ZSgpO1xyXG5cdFx0dmFyIHNvdXJjZXMgPSBbXTtcclxuXHRcdFxyXG5cdFx0Zm9yKHZhciBpID0gMDtpIDwgNzsrK2kpe1xyXG5cdFx0XHRwcm9taXNlID0gcHJvbWlzZS50aGVuKHJlYWRGaWxlLmJpbmQobnVsbCxyZXNvdXJjZXNbaSArIDddLnBhdGgpKVxyXG5cdFx0XHQudGhlbigoZGF0YSk9PntcclxuXHRcdFx0XHRyZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUscmVqZWN0KT0+e1xyXG5cdFx0XHRcdFx0dmFyIGFiID0gdG9BcnJheUJ1ZmZlcihkYXRhKTsgXHJcblx0XHRcdFx0XHRhdWRpb0N0eC5kZWNvZGVBdWRpb0RhdGEoYWIsKGJ1ZmZlcik9PntcclxuXHRcdFx0XHRcdFx0cmVzb2x2ZShidWZmZXIpO1xyXG5cdFx0XHRcdFx0fSwoZXJyKT0+e3JlamVjdChuZXcgRXJyb3IoJ2RlY29kZUF1ZGlvRGF0YSgpOmVycm9yOicpKTt9KTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0fSlcclxuXHRcdFx0LnRoZW4oKChpZHgpPT4geyBcclxuXHRcdFx0XHRyZXR1cm4gKGJ1ZmZlcik9PntcclxuXHRcdFx0XHRcdHZhciBzb3VyY2UgPSBhdWRpb0N0eC5jcmVhdGVCdWZmZXJTb3VyY2UoKTtcclxuXHRcdFx0XHRcdHNvdXJjZS5idWZmZXIgPSBidWZmZXI7XHJcblx0XHRcdFx0XHRzb3VyY2UubG9vcCA9IGZhbHNlO1xyXG5cdFx0XHRcdFx0c291cmNlcy5wdXNoKHNvdXJjZSk7XHJcblx0XHRcdFx0XHR2YXIgZ2FpbiA9IGF1ZGlvQ3R4LmNyZWF0ZUdhaW4oKTtcclxuXHRcdFx0XHRcdHNvdXJjZS5jb25uZWN0KGdhaW4pO1xyXG5cdFx0XHRcdFx0Z2Fpbi5jb25uZWN0KGF1ZGlvQ3R4LmRlc3RpbmF0aW9uKTtcclxuXHRcdFx0XHRcdHZhciBzbGlkZXIgPSBuZXcgU2xpZGVyKHN2Zyx7eDo1MCArIGlkeCAqIDcwLHk6NzY4IC0gMjQwLGRvbWFpbjpbMi4wLDAuMF19KTtcclxuXHRcdFx0XHRcdGdhaW4uZ2Fpbi52YWx1ZSA9IHNsaWRlci52YWx1ZSA9IDEuMDtcclxuXHRcdFx0XHRcdHNsaWRlci5vbignY2hhbmdlJywodik9PntcclxuXHRcdFx0XHRcdFx0Z2Fpbi5nYWluLnZhbHVlID0gdjtcclxuXHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdH07XHJcblx0XHRcdH0pKGkpKVxyXG5cdFx0XHQuY2F0Y2goKGUpPT57XHJcblx0XHRcdFx0Y29uc29sZS5sb2coZSk7XHJcblx0XHRcdH0pO1x0XHRcdFx0XHJcblx0XHR9XHJcblx0XHRcclxuXHRcdHByb21pc2VcclxuXHRcdC50aGVuKCgpPT57XHJcblx0XHRcdGNvbnNvbGUubG9nKCdwbGF5Jyk7XHJcblx0XHRcdHZhciBjdXJyZW50ID0gYXVkaW9DdHguY3VycmVudFRpbWUgKyAwLjAxO1xyXG5cdFx0XHRzb3VyY2VzLmZvckVhY2goKHMpPT57XHJcblx0XHRcdFx0cy5zdGFydChjdXJyZW50KTtcclxuXHRcdFx0fSk7XHJcblx0XHR9KTtcclxuXHQgfSk7XHJcblx0XHRcclxuXHRcclxuXHQvLyB2YXIgc2xpZGVyID0gbmV3IFNsaWRlcihzdmcse3g6NTAseTo3NjggLSAyMjB9KTtcclxuXHQvLyB2YXIgc2xpZGVyMiA9IG5ldyBTbGlkZXIoc3ZnLHt4OjEyMCx5Ojc2OCAtIDIyMH0pO1xyXG5cdC8vIHNsaWRlci52YWx1ZSA9IDAuNTtcclxufVxyXG5cclxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
